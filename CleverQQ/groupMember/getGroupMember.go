package main

import (
	"database/sql"
	_ "github.com/go-sql-driver/mysql"
	"github.com/yguilai/CleverQQ-SDK-Golang/clvq"
)

func init() {
	clvq.PluginName = "getGroupMember"
	clvq.PluginVer = "1.0.0"
	clvq.PluginDesc = "获取群成员信息并储存进数据库"
	clvq.PluginAuthor = "Logiase"
	clvq.IREvent = irEvent
}

func main() {}

var db, _ = ConnectDB("group")

func irEvent(qq string, msgType, subMsgType int, msgFrom, tigObjAct, tigObjPas, msg, msgNum, msgId, rawMsg, json string, ptrNext int) int {

	if msgType == 2 && msgFrom == "547902826" {
		// todo: 获取群成员信息
	}
	return clvq.MT_CONTINUE
}

const (
	// 数据库信息
	dbUser       string = "root"
	dbPasswd     string = "syx569927585"
	dbLoc        string = "tcp(localhost:3306)"
	MaxIdleConns int    = 10
	MaxOpenConns int    = 10
)

type AutoGenerated struct {
	Ec        int    `json:"ec"`
	Errcode   int    `json:"errcode"`
	Em        string `json:"em"`
	AdmNum    int    `json:"adm_num"`
	AdmMax    int    `json:"adm_max"`
	Vecsize   int    `json:"vecsize"`
	Levelname struct {
		Num1   string `json:"1"`
		Num2   string `json:"2"`
		Num3   string `json:"3"`
		Num4   string `json:"4"`
		Num5   string `json:"5"`
		Num6   string `json:"6"`
		Num10  string `json:"10"`
		Num11  string `json:"11"`
		Num12  string `json:"12"`
		Num13  string `json:"13"`
		Num14  string `json:"14"`
		Num15  string `json:"15"`
		Num101 string `json:"101"`
		Num102 string `json:"102"`
		Num103 string `json:"103"`
		Num104 string `json:"104"`
		Num105 string `json:"105"`
		Num106 string `json:"106"`
		Num107 string `json:"107"`
		Num108 string `json:"108"`
		Num109 string `json:"109"`
		Num110 string `json:"110"`
		Num111 string `json:"111"`
		Num112 string `json:"112"`
		Num113 string `json:"113"`
		Num114 string `json:"114"`
		Num115 string `json:"115"`
		Num116 string `json:"116"`
		Num117 string `json:"117"`
		Num118 string `json:"118"`
		Num197 string `json:"197"`
		Num198 string `json:"198"`
		Num199 string `json:"199"`
	} `json:"levelname"`
	Mems []struct {
		Uin           int `json:"uin"`
		Role          int `json:"role"`
		Flag          int `json:"flag"`
		G             int `json:"g"`
		JoinTime      int `json:"join_time"`
		LastSpeakTime int `json:"last_speak_time"`
		Lv            struct {
			Point int `json:"point"`
			Level int `json:"level"`
		} `json:"lv"`
		Nick string `json:"nick"`
		Card string `json:"card"`
		Qage int    `json:"qage"`
		Tags string `json:"tags"`
		Rm   int    `json:"rm"`
	} `json:"mems"`
	Count       int `json:"count"`
	SvrTime     int `json:"svr_time"`
	MaxCount    int `json:"max_count"`
	SearchCount int `json:"search_count"`
}

func ConnectDB(dbName string) (db *sql.DB, err error) {
	db, err = sql.Open("mysql", dbUser+":"+dbPasswd+"@"+dbLoc+"/"+dbName+"?charset=utf8")
	if err != nil {
		return
	}
	//defer db.Close()

	db.SetMaxIdleConns(MaxIdleConns)
	db.SetMaxOpenConns(MaxOpenConns)

	if err = db.Ping(); err != nil {
		return
	}
	return
}
